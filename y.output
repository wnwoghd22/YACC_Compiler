Terminals unused in grammar

   VOID
   RETURN
   STRUCT
   STRING
   fVal
   cVal
   sVal
   KEY
   OP
   PUNC
   NOT
   EQ
   NQ
   GQ
   LQ
   GT
   LT
   AND
   OR
   BAND
   BOR
   INC
   DEC


Grammar

    0 $accept: Cmp_Stmt $end

    1 Cmp_Stmt: %empty
    2         | Stmt Cmp_Stmt

    3 Stmt: Expr ';'
    4     | Decl
    5     | ';'

    6 $@1: %empty

    7 Expr: $@1 E

    8 $@2: %empty

    9 E: E '+' $@2 E

   10 $@3: %empty

   11 E: E '-' $@3 E

   12 $@4: %empty

   13 E: E '*' $@4 E

   14 $@5: %empty

   15 E: E '/' $@5 E
   16  | '-' E
   17  | '(' E ')'
   18  | iVal
   19  | ID

   20 $@6: %empty

   21 Decl: type $@6 Define

   22 $@7: %empty

   23 $@8: %empty

   24 Define: ID $@7 assign_option $@8 decl_option ';'

   25 $@9: %empty

   26 Define: ID '[' iVal ']' $@9 arr_assign_option decl_option ';'

   27 $@10: %empty

   28 $@11: %empty

   29 Define: ID '(' type ID ')' $@10 '{' $@11 Stmt '}'

   30 assign_option: %empty

   31 $@12: %empty

   32 assign_option: '=' $@12 Expr

   33 arr_assign_option: %empty

   34 $@13: %empty

   35 $@14: %empty

   36 arr_assign_option: '=' '{' $@13 iVal $@14 arr_val_option '}'

   37 arr_val_option: %empty

   38 $@15: %empty

   39 arr_val_option: ',' iVal $@15 arr_val_option

   40 decl_option: %empty

   41 $@16: %empty

   42 decl_option: ',' $@16 Define

   43 type: INT
   44     | DOUBLE
   45     | CHAR
   46     | FLOAT


Terminals, with rules where they appear

$end (0) 0
'(' (40) 17 29
')' (41) 17 29
'*' (42) 13
'+' (43) 9
',' (44) 39 42
'-' (45) 11 16
'/' (47) 15
';' (59) 3 5 24 26
'=' (61) 32 36
'[' (91) 26
']' (93) 26
'{' (123) 29 36
'}' (125) 29 36
error (256)
VOID (258)
RETURN (259)
STRUCT (260)
iVal (261) 18 26 36 39
INT (262) 43
DOUBLE (263) 44
FLOAT (264) 46
CHAR (265) 45
STRING (266)
fVal (267)
cVal (268)
sVal (269)
ID (270) 19 24 26 29
KEY (271)
OP (272)
PUNC (273)
NOT (274)
EQ (275)
NQ (276)
GQ (277)
LQ (278)
GT (279)
LT (280)
AND (281)
OR (282)
BAND (283)
BOR (284)
UMINUS (285)
INC (286)
DEC (287)


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
Cmp_Stmt (47)
    on left: 1 2, on right: 0 2
Stmt (48)
    on left: 3 4 5, on right: 2 29
Expr (49)
    on left: 7, on right: 3 32
$@1 (50)
    on left: 6, on right: 7
E (51)
    on left: 9 11 13 15 16 17 18 19, on right: 7 9 11 13 15 16 17
$@2 (52)
    on left: 8, on right: 9
$@3 (53)
    on left: 10, on right: 11
$@4 (54)
    on left: 12, on right: 13
$@5 (55)
    on left: 14, on right: 15
Decl (56)
    on left: 21, on right: 4
$@6 (57)
    on left: 20, on right: 21
Define (58)
    on left: 24 26 29, on right: 21 42
$@7 (59)
    on left: 22, on right: 24
$@8 (60)
    on left: 23, on right: 24
$@9 (61)
    on left: 25, on right: 26
$@10 (62)
    on left: 27, on right: 29
$@11 (63)
    on left: 28, on right: 29
assign_option (64)
    on left: 30 32, on right: 24
$@12 (65)
    on left: 31, on right: 32
arr_assign_option (66)
    on left: 33 36, on right: 26
$@13 (67)
    on left: 34, on right: 36
$@14 (68)
    on left: 35, on right: 36
arr_val_option (69)
    on left: 37 39, on right: 36 39
$@15 (70)
    on left: 38, on right: 39
decl_option (71)
    on left: 40 42, on right: 24 26
$@16 (72)
    on left: 41, on right: 42
type (73)
    on left: 43 44 45 46, on right: 21 29


State 0

    0 $accept: . Cmp_Stmt $end

    INT     shift, and go to state 1
    DOUBLE  shift, and go to state 2
    FLOAT   shift, and go to state 3
    CHAR    shift, and go to state 4
    ';'     shift, and go to state 5

    $end      reduce using rule 1 (Cmp_Stmt)
    $default  reduce using rule 6 ($@1)

    Cmp_Stmt  go to state 6
    Stmt      go to state 7
    Expr      go to state 8
    $@1       go to state 9
    Decl      go to state 10
    type      go to state 11


State 1

   43 type: INT .

    $default  reduce using rule 43 (type)


State 2

   44 type: DOUBLE .

    $default  reduce using rule 44 (type)


State 3

   46 type: FLOAT .

    $default  reduce using rule 46 (type)


State 4

   45 type: CHAR .

    $default  reduce using rule 45 (type)


State 5

    5 Stmt: ';' .

    $default  reduce using rule 5 (Stmt)


State 6

    0 $accept: Cmp_Stmt . $end

    $end  shift, and go to state 12


State 7

    2 Cmp_Stmt: Stmt . Cmp_Stmt

    INT     shift, and go to state 1
    DOUBLE  shift, and go to state 2
    FLOAT   shift, and go to state 3
    CHAR    shift, and go to state 4
    ';'     shift, and go to state 5

    $end      reduce using rule 1 (Cmp_Stmt)
    $default  reduce using rule 6 ($@1)

    Cmp_Stmt  go to state 13
    Stmt      go to state 7
    Expr      go to state 8
    $@1       go to state 9
    Decl      go to state 10
    type      go to state 11


State 8

    3 Stmt: Expr . ';'

    ';'  shift, and go to state 14


State 9

    7 Expr: $@1 . E

    iVal  shift, and go to state 15
    ID    shift, and go to state 16
    '-'   shift, and go to state 17
    '('   shift, and go to state 18

    E  go to state 19


State 10

    4 Stmt: Decl .

    $default  reduce using rule 4 (Stmt)


State 11

   21 Decl: type . $@6 Define

    $default  reduce using rule 20 ($@6)

    $@6  go to state 20


State 12

    0 $accept: Cmp_Stmt $end .

    $default  accept


State 13

    2 Cmp_Stmt: Stmt Cmp_Stmt .

    $default  reduce using rule 2 (Cmp_Stmt)


State 14

    3 Stmt: Expr ';' .

    $default  reduce using rule 3 (Stmt)


State 15

   18 E: iVal .

    $default  reduce using rule 18 (E)


State 16

   19 E: ID .

    $default  reduce using rule 19 (E)


State 17

   16 E: '-' . E

    iVal  shift, and go to state 15
    ID    shift, and go to state 16
    '-'   shift, and go to state 17
    '('   shift, and go to state 18

    E  go to state 21


State 18

   17 E: '(' . E ')'

    iVal  shift, and go to state 15
    ID    shift, and go to state 16
    '-'   shift, and go to state 17
    '('   shift, and go to state 18

    E  go to state 22


State 19

    7 Expr: $@1 E .
    9 E: E . '+' $@2 E
   11  | E . '-' $@3 E
   13  | E . '*' $@4 E
   15  | E . '/' $@5 E

    '-'  shift, and go to state 23
    '+'  shift, and go to state 24
    '*'  shift, and go to state 25
    '/'  shift, and go to state 26

    $default  reduce using rule 7 (Expr)


State 20

   21 Decl: type $@6 . Define

    ID  shift, and go to state 27

    Define  go to state 28


State 21

    9 E: E . '+' $@2 E
   11  | E . '-' $@3 E
   13  | E . '*' $@4 E
   15  | E . '/' $@5 E
   16  | '-' E .

    $default  reduce using rule 16 (E)


State 22

    9 E: E . '+' $@2 E
   11  | E . '-' $@3 E
   13  | E . '*' $@4 E
   15  | E . '/' $@5 E
   17  | '(' E . ')'

    '-'  shift, and go to state 23
    '+'  shift, and go to state 24
    '*'  shift, and go to state 25
    '/'  shift, and go to state 26
    ')'  shift, and go to state 29


State 23

   11 E: E '-' . $@3 E

    $default  reduce using rule 10 ($@3)

    $@3  go to state 30


State 24

    9 E: E '+' . $@2 E

    $default  reduce using rule 8 ($@2)

    $@2  go to state 31


State 25

   13 E: E '*' . $@4 E

    $default  reduce using rule 12 ($@4)

    $@4  go to state 32


State 26

   15 E: E '/' . $@5 E

    $default  reduce using rule 14 ($@5)

    $@5  go to state 33


State 27

   24 Define: ID . $@7 assign_option $@8 decl_option ';'
   26       | ID . '[' iVal ']' $@9 arr_assign_option decl_option ';'
   29       | ID . '(' type ID ')' $@10 '{' $@11 Stmt '}'

    '('  shift, and go to state 34
    '['  shift, and go to state 35

    $default  reduce using rule 22 ($@7)

    $@7  go to state 36


State 28

   21 Decl: type $@6 Define .

    $default  reduce using rule 21 (Decl)


State 29

   17 E: '(' E ')' .

    $default  reduce using rule 17 (E)


State 30

   11 E: E '-' $@3 . E

    iVal  shift, and go to state 15
    ID    shift, and go to state 16
    '-'   shift, and go to state 17
    '('   shift, and go to state 18

    E  go to state 37


State 31

    9 E: E '+' $@2 . E

    iVal  shift, and go to state 15
    ID    shift, and go to state 16
    '-'   shift, and go to state 17
    '('   shift, and go to state 18

    E  go to state 38


State 32

   13 E: E '*' $@4 . E

    iVal  shift, and go to state 15
    ID    shift, and go to state 16
    '-'   shift, and go to state 17
    '('   shift, and go to state 18

    E  go to state 39


State 33

   15 E: E '/' $@5 . E

    iVal  shift, and go to state 15
    ID    shift, and go to state 16
    '-'   shift, and go to state 17
    '('   shift, and go to state 18

    E  go to state 40


State 34

   29 Define: ID '(' . type ID ')' $@10 '{' $@11 Stmt '}'

    INT     shift, and go to state 1
    DOUBLE  shift, and go to state 2
    FLOAT   shift, and go to state 3
    CHAR    shift, and go to state 4

    type  go to state 41


State 35

   26 Define: ID '[' . iVal ']' $@9 arr_assign_option decl_option ';'

    iVal  shift, and go to state 42


State 36

   24 Define: ID $@7 . assign_option $@8 decl_option ';'

    '='  shift, and go to state 43

    $default  reduce using rule 30 (assign_option)

    assign_option  go to state 44


State 37

    9 E: E . '+' $@2 E
   11  | E . '-' $@3 E
   11  | E '-' $@3 E .
   13  | E . '*' $@4 E
   15  | E . '/' $@5 E

    '*'  shift, and go to state 25
    '/'  shift, and go to state 26

    $default  reduce using rule 11 (E)


State 38

    9 E: E . '+' $@2 E
    9  | E '+' $@2 E .
   11  | E . '-' $@3 E
   13  | E . '*' $@4 E
   15  | E . '/' $@5 E

    '*'  shift, and go to state 25
    '/'  shift, and go to state 26

    $default  reduce using rule 9 (E)


State 39

    9 E: E . '+' $@2 E
   11  | E . '-' $@3 E
   13  | E . '*' $@4 E
   13  | E '*' $@4 E .
   15  | E . '/' $@5 E

    $default  reduce using rule 13 (E)


State 40

    9 E: E . '+' $@2 E
   11  | E . '-' $@3 E
   13  | E . '*' $@4 E
   15  | E . '/' $@5 E
   15  | E '/' $@5 E .

    $default  reduce using rule 15 (E)


State 41

   29 Define: ID '(' type . ID ')' $@10 '{' $@11 Stmt '}'

    ID  shift, and go to state 45


State 42

   26 Define: ID '[' iVal . ']' $@9 arr_assign_option decl_option ';'

    ']'  shift, and go to state 46


State 43

   32 assign_option: '=' . $@12 Expr

    $default  reduce using rule 31 ($@12)

    $@12  go to state 47


State 44

   24 Define: ID $@7 assign_option . $@8 decl_option ';'

    $default  reduce using rule 23 ($@8)

    $@8  go to state 48


State 45

   29 Define: ID '(' type ID . ')' $@10 '{' $@11 Stmt '}'

    ')'  shift, and go to state 49


State 46

   26 Define: ID '[' iVal ']' . $@9 arr_assign_option decl_option ';'

    $default  reduce using rule 25 ($@9)

    $@9  go to state 50


State 47

   32 assign_option: '=' $@12 . Expr

    $default  reduce using rule 6 ($@1)

    Expr  go to state 51
    $@1   go to state 9


State 48

   24 Define: ID $@7 assign_option $@8 . decl_option ';'

    ','  shift, and go to state 52

    $default  reduce using rule 40 (decl_option)

    decl_option  go to state 53


State 49

   29 Define: ID '(' type ID ')' . $@10 '{' $@11 Stmt '}'

    $default  reduce using rule 27 ($@10)

    $@10  go to state 54


State 50

   26 Define: ID '[' iVal ']' $@9 . arr_assign_option decl_option ';'

    '='  shift, and go to state 55

    $default  reduce using rule 33 (arr_assign_option)

    arr_assign_option  go to state 56


State 51

   32 assign_option: '=' $@12 Expr .

    $default  reduce using rule 32 (assign_option)


State 52

   42 decl_option: ',' . $@16 Define

    $default  reduce using rule 41 ($@16)

    $@16  go to state 57


State 53

   24 Define: ID $@7 assign_option $@8 decl_option . ';'

    ';'  shift, and go to state 58


State 54

   29 Define: ID '(' type ID ')' $@10 . '{' $@11 Stmt '}'

    '{'  shift, and go to state 59


State 55

   36 arr_assign_option: '=' . '{' $@13 iVal $@14 arr_val_option '}'

    '{'  shift, and go to state 60


State 56

   26 Define: ID '[' iVal ']' $@9 arr_assign_option . decl_option ';'

    ','  shift, and go to state 52

    $default  reduce using rule 40 (decl_option)

    decl_option  go to state 61


State 57

   42 decl_option: ',' $@16 . Define

    ID  shift, and go to state 27

    Define  go to state 62


State 58

   24 Define: ID $@7 assign_option $@8 decl_option ';' .

    $default  reduce using rule 24 (Define)


State 59

   29 Define: ID '(' type ID ')' $@10 '{' . $@11 Stmt '}'

    $default  reduce using rule 28 ($@11)

    $@11  go to state 63


State 60

   36 arr_assign_option: '=' '{' . $@13 iVal $@14 arr_val_option '}'

    $default  reduce using rule 34 ($@13)

    $@13  go to state 64


State 61

   26 Define: ID '[' iVal ']' $@9 arr_assign_option decl_option . ';'

    ';'  shift, and go to state 65


State 62

   42 decl_option: ',' $@16 Define .

    $default  reduce using rule 42 (decl_option)


State 63

   29 Define: ID '(' type ID ')' $@10 '{' $@11 . Stmt '}'

    INT     shift, and go to state 1
    DOUBLE  shift, and go to state 2
    FLOAT   shift, and go to state 3
    CHAR    shift, and go to state 4
    ';'     shift, and go to state 5

    $default  reduce using rule 6 ($@1)

    Stmt  go to state 66
    Expr  go to state 8
    $@1   go to state 9
    Decl  go to state 10
    type  go to state 11


State 64

   36 arr_assign_option: '=' '{' $@13 . iVal $@14 arr_val_option '}'

    iVal  shift, and go to state 67


State 65

   26 Define: ID '[' iVal ']' $@9 arr_assign_option decl_option ';' .

    $default  reduce using rule 26 (Define)


State 66

   29 Define: ID '(' type ID ')' $@10 '{' $@11 Stmt . '}'

    '}'  shift, and go to state 68


State 67

   36 arr_assign_option: '=' '{' $@13 iVal . $@14 arr_val_option '}'

    $default  reduce using rule 35 ($@14)

    $@14  go to state 69


State 68

   29 Define: ID '(' type ID ')' $@10 '{' $@11 Stmt '}' .

    $default  reduce using rule 29 (Define)


State 69

   36 arr_assign_option: '=' '{' $@13 iVal $@14 . arr_val_option '}'

    ','  shift, and go to state 70

    $default  reduce using rule 37 (arr_val_option)

    arr_val_option  go to state 71


State 70

   39 arr_val_option: ',' . iVal $@15 arr_val_option

    iVal  shift, and go to state 72


State 71

   36 arr_assign_option: '=' '{' $@13 iVal $@14 arr_val_option . '}'

    '}'  shift, and go to state 73


State 72

   39 arr_val_option: ',' iVal . $@15 arr_val_option

    $default  reduce using rule 38 ($@15)

    $@15  go to state 74


State 73

   36 arr_assign_option: '=' '{' $@13 iVal $@14 arr_val_option '}' .

    $default  reduce using rule 36 (arr_assign_option)


State 74

   39 arr_val_option: ',' iVal $@15 . arr_val_option

    ','  shift, and go to state 70

    $default  reduce using rule 37 (arr_val_option)

    arr_val_option  go to state 75


State 75

   39 arr_val_option: ',' iVal $@15 arr_val_option .

    $default  reduce using rule 39 (arr_val_option)
